<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd ">
    <munit:config name="testing-demo-apikit-test.xml" />
    <http:request-config name="HTTP_Request_Configuration" basePath="/api" responseTimeout="300000">
        <http:request-connection host="localhost" port="8081" />
    </http:request-config>
    <http:request-config name="HTTP_Request_configuration_error" doc:name="HTTP Request configuration" doc:id="54dbbc42-828e-4b89-b330-794e706419d8" basePath="/error" >
		<http:request-connection host="localhost" port="8088"/>
	</http:request-config>
	<munit:test name="get:\user\(userId):testing-demo-config-200-application\json-FlowTest" description="Verifying functionality of [get:\user\(userId):testing-demo-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="testing-demo-main" />
            <munit:enable-flow-source value="get:\user\(userId):testing-demo-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <munit-tools:mock-when doc:name="Mock when http request" doc:id="b5bed59a-bad2-4e3c-9bb7-7fb288a84749" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="RESTful API" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="1d66fe8a-7746-4671-a390-6749565e2426" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('scaffolder/response/get_200_user_{userid}_application_json.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<set-variable variableName="userId" value="#['1003']" doc:name="userId" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/user/$(vars.userId)']">
                <http:headers>#[{"Accept":"application/json","client_secret":"","client_id":""}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
			<munit-tools:assert-equals doc:name="Assert equals payload content" doc:id="901e1ebf-9a84-4017-95bb-c42fcd6ebebc" actual="#[payload.firstName]" expected='Keith' message="&quot;The payload first name must be 'Keith'&quot;"/>
        </munit:validation>
    </munit:test>
    <munit:test name="get:\user\(userId):testing-demo-config-400-application\json-FlowTest" description="Verifying functionality of [get:\user\(userId):testing-demo-config-400-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="testing-demo-main" />
            <munit:enable-flow-source value="get:\user\(userId):testing-demo-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="userId" value="#['1001']" doc:name="userId" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/user/$(vars.userId)']">
                <http:headers><![CDATA[#[{"Accept":"application/json","client_id":"123"}]]]></http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\user\(userId):testing-demo-config-500-application\json-FlowTest" description="Verifying functionality of [get:\user\(userId):testing-demo-config-500-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="testing-demo-main" />
            <munit:enable-flow-source value="get:\user\(userId):testing-demo-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <munit-tools:mock-when doc:name="Mock when http call" doc:id="aca7daf8-c5e2-4254-bfd7-62af8a403730" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="RESTful API" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="1d66fe8a-7746-4671-a390-6749565e2426" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:CONNECTIVITY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<set-variable variableName="userId" value="#['1001']" doc:name="userId" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/user/1001">
                <http:headers><![CDATA[#[{"Accept":"application/json","client_secret":"","client_id":""}]]]></http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\users:testing-demo-config-200-application\json-FlowTest" description="Verifying functionality of [get:\users:testing-demo-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="testing-demo-main" />
            <munit:enable-flow-source value="get:\users:testing-demo-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/users">
                <http:headers>#[{"Accept":"application/json","client_secret":"","client_id":""}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\users:testing-demo-config-400-application\json-FlowTest" description="Verifying functionality of [get:\users:testing-demo-config-400-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="testing-demo-main" />
            <munit:enable-flow-source value="get:\users:testing-demo-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/users">
                <http:headers><![CDATA[#[{"Accept":"application/json","client_id":""}]]]></http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\users:testing-demo-config-500-application\json-FlowTest" description="Verifying functionality of [get:\users:testing-demo-config-500-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="testing-demo-main" />
            <munit:enable-flow-source value="get:\users:testing-demo-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="236b8055-368e-463c-887e-3f3e51df90c0" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="RESTful API" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="1d66fe8a-7746-4671-a390-6749565e2426" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:CONNECTIVITY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/users">
                <http:headers><![CDATA[#[{"Accept":"application/json","client_secret":"","client_id":""}]]]></http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
        </munit:validation>
    </munit:test>
</mule>
